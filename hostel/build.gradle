
plugins {
	id 'org.springframework.boot' version '2.7.9'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.8'
}

group = 'sh.radical'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'


ext {
	set('springCloudVersion', "2021.0.3")
}

def queryDslSourceDirectory = 'src/querydsl/java/generated' 

compileQuerydsl {
                    options.annotationProcessorPath = configurations.querydsl
                }
configurations { 
                querydsl.extendsFrom compileClasspath 
            }
querydsl {
                jpa = true
                querydslSourcesDir = queryDslSourceDirectory
            }

dependencyManagement {
	imports {
		mavenBom("org.springframework.cloud:spring-cloud-dependencies:${property("springCloudVersion")}")
	}
}


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {	
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.postgresql:postgresql'
	implementation 'com.querydsl:querydsl-jpa:5.0.0'
	implementation 'com.querydsl:querydsl-apt:5.0.0'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.4'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	
	
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	
}



tasks.withType(Test) {
    useJUnitPlatform()
}
